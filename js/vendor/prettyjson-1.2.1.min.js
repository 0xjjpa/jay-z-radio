!function(n){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.prettyjson=n()}}(function(){return function n(e,t,r){function o(i,s){if(!t[i]){if(!e[i]){var u="function"==typeof require&&require;if(!s&&u)return u(i,!0);if(a)return a(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var l=t[i]={exports:{}};e[i][0].call(l.exports,function(n){var t=e[i][1][n];return o(t?t:n)},l,l.exports,n,e,t,r)}return t[i].exports}for(var a="function"==typeof require&&require,i=0;i<r.length;i++)o(r[i]);return o}({1:[function(n,e,t){"use strict";var r=n("colors/safe"),o=n("./utils");t.version=n("../package.json").version;var a=function(n,e,t){return"boolean"==typeof n||"number"==typeof n||"function"==typeof n||null===n||n instanceof Date||("string"==typeof n&&n.indexOf("\n")===-1||!(!t.inlineArrays||e||!Array.isArray(n)||!a(n[0],!0,t)))},i=function(n,e){if(e.noColor)return n;if("string"==typeof n)return e.stringColor?r[e.stringColor](n):n;var t=n+"";return n===!0?r.green(t):n===!1?r.red(t):null===n?r.grey(t):"number"==typeof n?r[e.numberColor](t):"function"==typeof n?"function() {}":Array.isArray(n)?n.join(", "):t},s=function(n,e){var t=n.split("\n");return t=t.map(function(n){return o.indent(e)+n}),t.join("\n")},u=function(n,e,t){if(a(n,!1,e))return[o.indent(t)+i(n,e)];if("string"==typeof n)return[o.indent(t)+'"""',s(n,t+e.defaultIndentation),o.indent(t)+'"""'];if(Array.isArray(n)){if(0===n.length)return[o.indent(t)+e.emptyArrayMsg];var c=[];return n.forEach(function(n){var i="- ";e.noColor||(i=r[e.dashColor](i)),i=o.indent(t)+i,a(n,!1,e)?(i+=u(n,e,0)[0],c.push(i)):(c.push(i),c.push.apply(c,u(n,e,t+e.defaultIndentation)))}),c}if(n instanceof Error)return u({message:n.message,stack:n.stack.split("\n")},e,t);var l,p=e.noAlign?0:o.getMaxIndexLength(n),f=[];return Object.getOwnPropertyNames(n).forEach(function(i){if(l=i+": ",e.noColor||(l=r[e.keysColor](l)),l=o.indent(t)+l,void 0!==n[i])if(a(n[i],!1,e)){var s=e.noAlign?0:p-i.length;l+=u(n[i],e,s)[0],f.push(l)}else f.push(l),f.push.apply(f,u(n[i],e,t+e.defaultIndentation))}),f};t.render=function(n,e,t){return t=t||0,e=e||{},e.emptyArrayMsg=e.emptyArrayMsg||"(empty array)",e.keysColor=e.keysColor||"green",e.dashColor=e.dashColor||"green",e.numberColor=e.numberColor||"blue",e.defaultIndentation=e.defaultIndentation||2,e.noColor=!!e.noColor,e.noAlign=!!e.noAlign,e.stringColor=e.stringColor||null,u(n,e,t).join("\n")},t.renderString=function(n,e,o){var a,i="";if("string"!=typeof n||""===n)return"";if("{"!==n[0]&&"["!==n[0]){var s;s=n.indexOf("{")===-1?n.indexOf("["):n.indexOf("[")===-1?n.indexOf("{"):n.indexOf("{")<n.indexOf("[")?n.indexOf("{"):n.indexOf("["),i+=n.substr(0,s)+"\n",n=n.substr(s)}try{a=JSON.parse(n)}catch(n){return r.red("Error:")+" Not valid JSON!"}return i+=t.render(a,e,o)}},{"../package.json":13,"./utils":2,"colors/safe":12}],2:[function(n,e,t){"use strict";t.indent=function(n){return new Array(n+1).join(" ")},t.getMaxIndexLength=function(n){var e=0;return Object.getOwnPropertyNames(n).forEach(function(t){void 0!==n[t]&&(e=Math.max(e,t.length))}),e}},{}],3:[function(n,e,t){function r(n){var e=function n(){return o.apply(n,arguments)};return e._styles=n,e.__proto__=d,e}function o(){var n=arguments,e=n.length,t=0!==e&&String(arguments[0]);if(e>1)for(var r=1;r<e;r++)t+=" "+n[r];if(!s.enabled||!t)return t;for(var o=this._styles,a=o.length;a--;){var i=u[o[a]];t=i.open+t.replace(i.closeRe,i.open)+i.close}return t}function a(n){for(var e in n)!function(e){s[e]=function(t){if("object"==typeof n[e]){var r=t;for(var o in n[e])r=s[n[e][o]](r);return r}return s[n[e]](t)}}(e)}function i(){var n={};return Object.keys(f).forEach(function(e){n[e]={get:function(){return r([e])}}}),n}var s={};e.exports=s,s.themes={};var u=s.styles=n("./styles"),c=Object.defineProperties;s.supportsColor=n("./system/supports-colors"),"undefined"==typeof s.enabled&&(s.enabled=s.supportsColor),s.stripColors=s.strip=function(n){return(""+n).replace(/\x1B\[\d+m/g,"")};var l=(s.stylize=function(n,e){return s.enabled?u[e].open+n+u[e].close:n+""},/[|\\{}()[\]^$+*?.]/g),p=function(n){if("string"!=typeof n)throw new TypeError("Expected a string");return n.replace(l,"\\$&")},f=function(){var n={};return u.grey=u.gray,Object.keys(u).forEach(function(e){u[e].closeRe=new RegExp(p(u[e].close),"g"),n[e]={get:function(){return r(this._styles.concat(e))}}}),n}(),d=c(function(){},f);s.setTheme=function(e){if("string"==typeof e)try{return s.themes[e]=n(e),a(s.themes[e]),s.themes[e]}catch(n){return console.log(n),n}else a(e)};var m=function(n,e){var t=e.split("");return t=t.map(n),t.join("")};s.trap=n("./custom/trap"),s.zalgo=n("./custom/zalgo"),s.maps={},s.maps.america=n("./maps/america"),s.maps.zebra=n("./maps/zebra"),s.maps.rainbow=n("./maps/rainbow"),s.maps.random=n("./maps/random");for(var h in s.maps)!function(n){s[n]=function(e){return m(s.maps[n],e)}}(h);c(s,i())},{"./custom/trap":4,"./custom/zalgo":5,"./maps/america":6,"./maps/rainbow":7,"./maps/random":8,"./maps/zebra":9,"./styles":10,"./system/supports-colors":11}],4:[function(n,e,t){e.exports=function(n,e){var t="";n=n||"Run the trap, drop the bass",n=n.split("");var r={a:["@","Ä„","Èº","É…","Î”","Î›","Ð”"],b:["ÃŸ","Æ","Éƒ","É®","Î²","à¸¿"],c:["Â©","È»","Ï¾"],d:["Ã","ÆŠ","Ô€","Ô","Ô‚","Ôƒ"],e:["Ã‹","Ä•","ÆŽ","É˜","Î£","Î¾","Ò¼","à©¬"],f:["Óº"],g:["É¢"],h:["Ä¦","Æ•","Ò¢","Òº","Ó‡","ÔŠ"],i:["à¼"],j:["Ä´"],k:["Ä¸","Ò ","Óƒ","Ôž"],l:["Ä¹"],m:["Ê","Ó","ÓŽ","Ô ","Ô¡","àµ©"],n:["Ã‘","Å‹","Æ","Í¶","Î ","ÒŠ"],o:["Ã˜","Ãµ","Ã¸","Ç¾","Ê˜","Ñº","×","Û","à¹"],p:["Ç·","ÒŽ"],q:["à§"],r:["Â®","Æ¦","È","ÉŒ","Ê€","Ð¯"],s:["Â§","Ïž","ÏŸ","Ï¨"],t:["Å","Å¦","Í³"],u:["Æ±","Õ"],v:["×˜"],w:["Ð¨","Ñ ","Ñ¼","àµ°"],x:["Ò²","Ó¾","Ó¼","Ó½"],y:["Â¥","Ò°","Ó‹"],z:["Æµ","É€"]};return n.forEach(function(n){n=n.toLowerCase();var e=r[n]||[" "],o=Math.floor(Math.random()*e.length);t+="undefined"!=typeof r[n]?r[n][o]:n}),t}},{}],5:[function(n,e,t){e.exports=function(n,e){function t(n){var e=Math.floor(Math.random()*n);return e}function r(n){var e=!1;return i.filter(function(t){e=t===n}),e}function o(n,e){var o,i,s="";e=e||{},e.up="undefined"==typeof e.up||e.up,e.mid="undefined"==typeof e.mid||e.mid,e.down="undefined"==typeof e.down||e.down,e.size="undefined"!=typeof e.size?e.size:"maxi",n=n.split("");for(i in n)if(!r(i)){switch(s+=n[i],o={up:0,down:0,mid:0},e.size){case"mini":o.up=t(8),o.mid=t(2),o.down=t(8);break;case"maxi":o.up=t(16)+3,o.mid=t(4)+1,o.down=t(64)+3;break;default:o.up=t(8)+1,o.mid=t(6)/2,o.down=t(8)+1}var u=["up","mid","down"];for(var c in u)for(var l=u[c],p=0;p<=o[l];p++)e[l]&&(s+=a[l][t(a[l].length)])}return s}n=n||"   he is here   ";var a={up:["Ì","ÌŽ","Ì„","Ì…","Ì¿","Ì‘","Ì†","Ì","Í’","Í—","Í‘","Ì‡","Ìˆ","ÌŠ","Í‚","Ì“","Ìˆ","ÍŠ","Í‹","ÍŒ","Ìƒ","Ì‚","ÌŒ","Í","Ì€","Ì","Ì‹","Ì","Ì’","Ì“","Ì”","Ì½","Ì‰","Í£","Í¤","Í¥","Í¦","Í§","Í¨","Í©","Íª","Í«","Í¬","Í­","Í®","Í¯","Ì¾","Í›","Í†","Ìš"],down:["Ì–","Ì—","Ì˜","Ì™","Ìœ","Ì","Ìž","ÌŸ","Ì ","Ì¤","Ì¥","Ì¦","Ì©","Ìª","Ì«","Ì¬","Ì­","Ì®","Ì¯","Ì°","Ì±","Ì²","Ì³","Ì¹","Ìº","Ì»","Ì¼","Í…","Í‡","Íˆ","Í‰","Í","ÍŽ","Í“","Í”","Í•","Í–","Í™","Íš","Ì£"],mid:["Ì•","Ì›","Ì€","Ì","Í˜","Ì¡","Ì¢","Ì§","Ì¨","Ì´","Ìµ","Ì¶","Íœ","Í","Íž","ÍŸ","Í ","Í¢","Ì¸","Ì·","Í¡"," Ò‰"]},i=[].concat(a.up,a.down,a.mid);return o(n,e)}},{}],6:[function(n,e,t){var r=n("../colors");e.exports=function(){return function(n,e,t){if(" "===n)return n;switch(e%3){case 0:return r.red(n);case 1:return r.white(n);case 2:return r.blue(n)}}}()},{"../colors":3}],7:[function(n,e,t){var r=n("../colors");e.exports=function(){var n=["red","yellow","green","blue","magenta"];return function(e,t,o){return" "===e?e:r[n[t++%n.length]](e)}}()},{"../colors":3}],8:[function(n,e,t){var r=n("../colors");e.exports=function(){var n=["underline","inverse","grey","yellow","red","green","blue","white","cyan","magenta"];return function(e,t,o){return" "===e?e:r[n[Math.round(Math.random()*(n.length-1))]](e)}}()},{"../colors":3}],9:[function(n,e,t){var r=n("../colors");e.exports=function(n,e,t){return e%2===0?n:r.inverse(n)}},{"../colors":3}],10:[function(n,e,t){var r={};e.exports=r;var o={reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],grey:[90,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],blackBG:[40,49],redBG:[41,49],greenBG:[42,49],yellowBG:[43,49],blueBG:[44,49],magentaBG:[45,49],cyanBG:[46,49],whiteBG:[47,49]};Object.keys(o).forEach(function(n){var e=o[n],t=r[n]=[];t.open="["+e[0]+"m",t.close="["+e[1]+"m"})},{}],11:[function(n,e,t){(function(n){var t=n.argv;e.exports=function(){return t.indexOf("--no-color")===-1&&t.indexOf("--color=false")===-1&&(t.indexOf("--color")!==-1||t.indexOf("--color=true")!==-1||t.indexOf("--color=always")!==-1||!(n.stdout&&!n.stdout.isTTY)&&("win32"===n.platform||("COLORTERM"in n.env||"dumb"!==n.env.TERM&&!!/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(n.env.TERM))))}()}).call(this,n("_process"))},{_process:14}],12:[function(n,e,t){var r=n("./lib/colors");e.exports=r},{"./lib/colors":3}],13:[function(n,e,t){e.exports={author:"Rafael de Oleza <rafeca@gmail.com> (https://github.com/rafeca)",name:"prettyjson",description:"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output",version:"1.2.1",homepage:"http://rafeca.com/prettyjson",keywords:["json","cli","formatting","colors"],repository:{type:"git",url:"https://github.com/rafeca/prettyjson.git"},bugs:{url:"https://github.com/rafeca/prettyjson/issues"},main:"./lib/prettyjson",license:"MIT",scripts:{},bin:{prettyjson:"./bin/prettyjson"},dependencies:{colors:"^1.1.2",minimist:"^1.2.0"},devDependencies:{coveralls:"^2.11.15",istanbul:"^0.4.5",jshint:"^2.9.4",mocha:"^3.1.2","mocha-lcov-reporter":"^1.2.0",should:"^11.1.1"},readme:"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson) [![NPM version](https://badge.fury.io/js/prettyjson.png)](http://badge.fury.io/js/prettyjson) [![Coverage Status](https://coveralls.io/repos/rafeca/prettyjson/badge.png?branch=master)](https://coveralls.io/r/rafeca/prettyjson?branch=master)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output.\n\n## How to install\n\nJust install it via NPM:\n\n```bash\n$ npm install -g prettyjson\n```\n\nThis will install `prettyjson` globally, so it will be added automatically\nto your `PATH`.\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more\nconvenient way. You can use the CLI in three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass\nit as the first argument to the CLI:\n\n```bash\n$ prettyjson package.json\n```\n\n![Example 1](https://raw.github.com/rafeca/prettyjson/master/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an\nHTTP request) to the CLI to see the JSON result in a clearer way:\n\n```bash\n$ curl https://api.github.com/users/rafeca | prettyjson\n```\n\n![Example 2](https://raw.github.com/rafeca/prettyjson/master/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a\nprompt where you can past JSON strings and they'll be automatically displayed in a clearer way:\n\n![Example 3](https://raw.github.com/rafeca/prettyjson/master/images/example5.png)\n\n### Command line options\n\nIt's possible to customize the output through some command line options:\n\n```bash\n# Change colors\n$ prettyjson --string=red --keys=blue --dash=yellow --number=green package.json\n\n# Do not use colors\n$ prettyjson --nocolor=1 package.json\n\n# Change indentation\n$ prettyjson --indent=4 package.json\n\n# Render arrays elements in a single line\n$ prettyjson --inline-arrays=1 package.json\n```\n\n**Deprecation Notice**: The old configuration through environment variables is\ndeprecated and it will be removed in the next major version (1.0.0).\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it. You just have to include it in your script and call\nthe `render()` method:\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nvar options = {\n  noColor: true\n};\n\nconsole.log(prettyjson.render(data, options));\n```\n\nAnd will output:\n\n![Example 4](https://raw.github.com/rafeca/prettyjson/master/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data, {\n  keysColor: 'rainbow',\n  dashColor: 'magenta',\n  stringColor: 'white'\n}));\n```\n\nWill output something like:\n\n![Example 5](https://raw.github.com/rafeca/prettyjson/master/images/example2.png)\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo,\ninstalling the development dependencies:\n\n```bash\n$ npm install\n```\n\nthen run the tests:\n\n```bash\n$ npm test\n```\n\nOn windows, you can run the tests with:\n\n```cmd\nC:\\git\\prettyjson> npm run-script testwin\n```\n",readmeFilename:"package/README.md"}},{}],14:[function(n,e,t){function r(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function a(n){if(p===setTimeout)return setTimeout(n,0);if((p===r||!p)&&setTimeout)return p=setTimeout,setTimeout(n,0);try{return p(n,0)}catch(e){try{return p.call(null,n,0)}catch(e){return p.call(this,n,0)}}}function i(n){if(f===clearTimeout)return clearTimeout(n);if((f===o||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(n);try{return f(n)}catch(e){try{return f.call(null,n)}catch(e){return f.call(this,n)}}}function s(){g&&m&&(g=!1,m.length?h=m.concat(h):y=-1,h.length&&u())}function u(){if(!g){var n=a(s);g=!0;for(var e=h.length;e;){for(m=h,h=[];++y<e;)m&&m[y].run();y=-1,e=h.length}m=null,g=!1,i(n)}}function c(n,e){this.fun=n,this.array=e}function l(){}var p,f,d=e.exports={};!function(){try{p="function"==typeof setTimeout?setTimeout:r}catch(n){p=r}try{f="function"==typeof clearTimeout?clearTimeout:o}catch(n){f=o}}();var m,h=[],g=!1,y=-1;d.nextTick=function(n){var e=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)e[t-1]=arguments[t];h.push(new c(n,e)),1!==h.length||g||a(u)},c.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(n){return[]},d.binding=function(n){throw new Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(n){throw new Error("process.chdir is not supported")},d.umask=function(){return 0}},{}]},{},[1])(1)});